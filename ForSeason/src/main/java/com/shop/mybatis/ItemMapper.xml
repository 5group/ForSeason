<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.ItemMapper">

    <select id="select" parameterType="Integer" resultType="Item">
        SELECT i.*,
               COUNT(r.rev_no)                AS rcnt,
               CEIL(AVG(r.rev_score) * 2) / 2 AS revavg_score
        FROM item i
                 LEFT JOIN review r ON i.item_no = r.item_no
        WHERE i.item_no = #{item_no}
        GROUP BY i.item_no;
    </select>
    <select id="selectAll" resultType="Item">
        SELECT *
        FROM item
    </select>
    <insert id="insert" parameterType="Item">
        INSERT INTO item
        VALUES (item_no, #{cate_no}, #{item_name}, #{item_price}, #{item_discnt}, #{item_info}, #{item_hit}, now())
    </insert>
    <update id="update" parameterType="Item">
        UPDATE item
        SET item_price=#{item_price},
            item_discnt=#{item_discnt},
            item_info=#{item_info}
        WHERE item_no = #{item_no}
    </update>
    <delete id="delete" parameterType="Integer">
        DELETE
        FROM item
        WHERE item_no = #{item_no}
    </delete>

    <select id="totalRecord" parameterType="map" resultType="Integer">
        SELECT count(*) FROM item i
        <if test="middle!=null or top!=null">INNER JOIN category c</if>
        <if test="top!=null">INNER JOIN category c2</if>
        WHERE
        <if test="paging.searchWord!=null and paging.searchWord!=''">item_name LIKE
            CONCAT('%',#{paging.searchWord},'%')
        </if>
        <if test="(sub!=null or middle!=null or top!=null) and (paging.searchWord!=null and paging.searchWord!='')">
            AND
        </if>
        <choose>
            <when test="sub!=null">
                i.cate_no=#{sub}
            </when>
            <when test="middle!=null">
                i.cate_no=c.cate_no AND c.cate_no2=#{middle}
            </when>
            <when test="top!=null">
                i.cate_no=c.cate_no AND c.cate_no2=c2.cate_no AND c2.cate_no2=#{top}
            </when>
        </choose>
    </select>

    <select id="selectItemList" parameterType="map" resultType="Item">
        SELECT i.item_no, i.cate_no, i.item_name, i.item_price, i.item_discnt, i.item_info, i.item_hit, i.item_udate
        FROM item i
        <if test="middle!=null or top!=null">INNER JOIN category c</if>
        <if test="top!=null">INNER JOIN category c2</if>
        WHERE
        <if test="paging.searchWord!=null and paging.searchWord!=''">item_name LIKE
            CONCAT('%',#{paging.searchWord},'%')
        </if>
        <if test="(sub!=null or middle!=null or top!=null) and (paging.searchWord!=null and paging.searchWord!='')">
            AND
        </if>
        <choose>
            <when test="sub!=null">
                i.cate_no=#{sub}
            </when>
            <when test="middle!=null">
                i.cate_no=c.cate_no AND c.cate_no2=#{middle}
            </when>
            <when test="top!=null">
                i.cate_no=c.cate_no AND c.cate_no2=c2.cate_no AND c2.cate_no2=#{top}
            </when>
        </choose>
        <choose>
            <when test="paging.orderBy.equals('new')">
                ORDER BY item_udate ASC
            </when>
            <when test="paging.orderBy.equals('lowPrice')">
                ORDER BY item_price ASC
            </when>
            <when test="paging.orderBy.equals('highPrice')">
                ORDER BY item_price DESC
            </when>
            <when test="paging.orderBy.equals('itemHit')">
                ORDER BY item_hit DESC
            </when>
        </choose>
        <choose>
            <when test="paging.totalPage!=paging.nowPage">
                LIMIT #{paging.limitStart}, #{paging.onePageRecord}
            </when>
            <otherwise>
                LIMIT #{paging.limitStart}, #{paging.selectRecord}
            </otherwise>
        </choose>
    </select>

    <select id="selectCategorys" parameterType="Integer" resultType="Category">  <!-- 현재 아이템의 대,중,소분류 구하기 -->
        select c3.cate_name as 'top_cate_name', c2.cate_name as'mid_cate_name', c1.cate_name from category c1
        inner join item i
        inner join category c2
        inner join category c3
        where i.cate_no=c1.cate_no AND item_no=#{item_no} AND c1.cate_no2=c2.cate_no AND c2.cate_no2=c3.cate_no
    </select>

    <select id="selectMiddleCateNoByItem" parameterType="Integer" resultType="Item">
        select *
        from item i
                 INNER JOIN category c
        where i.cate_no = c.cate_no
          AND c.cate_no2 = #{cate_no};
    </select>

    <update id="updateItemhit" parameterType="Integer">
        UPDATE item
        SET item_hit=item_hit + 1
        WHERE item_no = #{item_no};
    </update>

    <select id="selectBestItemList" resultType="Item">
        SELECT i.item_no, i.item_name, i.item_price, count(i.item_no) AS 'item_order_total'
        FROM `order_detail` od
                 INNER JOIN stock s
                 INNER JOIN item i
        WHERE od.stock_no = s.stock_no
          AND s.item_no = i.item_no
        GROUP BY i.item_no
        ORDER BY item_order_total DESC LIMIT 9;
    </select>
</mapper>